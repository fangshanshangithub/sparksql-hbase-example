<!--http://my.oschina.net/looly/blog/298675-->
<!-- 当scan属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。 -->
<!-- scanPeriod用于设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。-->
<!-- 当debug属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!--
    设置变量： <property>
    用来定义变量值的标签，<property> 有两个属性name和value；
    name: 变量的名称。
    value: 变量定义的值。
    通过<property>定义的值会被插入到logger上下文中。定义变量后，可以使“${}”来使用变量。
    例如使用<property>定义上下文名称，然后在<contentName>设置logger上下文时使用。
    -->
    <property name="APP_NAME" value="SparkSQL-HBase-Example"/>

    <!--
    设置上下文名称:<contextName>
    每个logger都关联到logger上下文，默认上下文名称为default。
    但可以使用<contextName>设置成其他名字，用于区分不同应用程序的记录。一旦设置，不能修改。
    -->
    <contextName>${APP_NAME}</contextName>

    <!--
    获取时间戳字符串：<timestamp>
    两个属性:
    key: 标识此<timestamp> 的名字；
    datePattern: 设置将当前时间（解析配置文件的时间）转换为字符串的模式，遵循java.txt.SimpleDateFormat的格式。
    例如将解析配置文件的时间作为上下文名称：
    -->
    <timestamp key="bySecond" datePattern="yyyyMMdd'T'HHmmss"/>

    <!--
    设置loger：
    <loger>用来设置某一个包或者具体的某一个类的日志打印级别、以及指定<appender>。
    <loger>仅有一个name属性，一个可选的level和一个可选的addtivity属性。
    name: 用来指定受此loger约束的某一个包或者具体的某一个类。
    level: 用来设置打印级别，大小写无关：TRACE, DEBUG, INFO,WARN,ERROR,ALL和OFF，
    还有一个特俗值INHERITED或者同义词NULL`，代表强制执行上级的级别。
    如果未设置此属性，那么当前loger将会继承上级的级别。
    addtivity: 是否向上级loger传递打印信息。默认是true。
    <root>也是元素，但是它是根loger。只有一个level属性，应为已经被命名为"root”.
    level: 用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，不能设置为INHERITED或者同义词NULL。 默认是DEBUG。
    <loger>和<root>可以包含零个或多个<appender-ref>元素，标识这个appender将会添加到这个loger。
    例如：
    -->
    <loger></loger>

</configuration>